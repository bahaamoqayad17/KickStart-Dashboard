import '@/app/styles/index.css';
import 'react-date-range/dist/styles.css';
import 'react-date-range/dist/theme/default.css';
import '@/app/styles/vendors.css';

import React, { ReactNode } from 'react';
import type { Metadata } from 'next';
import AppWrapper from '@/app/[locale]/_app';
import dayjs from 'dayjs';
import localizedFormat from 'dayjs/plugin/localizedFormat';
import Providers from '@/app/[locale]/_providers';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { getUserFromCookie } from '@/lib/cookie';
import { UserType } from '@/models/User';
import { SessionProvider } from '@/context/sessionContext';
import {notFound} from 'next/navigation';
import {routing} from '@/locales/routing';
import {setRequestLocale, getMessages} from 'next-intl/server';
import { poppins } from '@/config/fonts.config';

export const metadata: Metadata = {
	title: 'Fyr | React NextJs TypeScript Tailwind Admin & AI Chat Template',
	description: 'Generated by create next app',
};

export function generateStaticParams() {
  return routing.locales.map((locale: string) => ({locale}));
}

const RootLayout = async ({
	children,
	params,
}: {
	children: ReactNode;
	  params: Promise<{locale: string}>;

}) => {
	dayjs.extend(localizedFormat);
	const user = await getUserFromCookie();
	const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);
  const messages = await getMessages();
  
	return (
		<SessionProvider initialUser={user as unknown as UserType}>
			<Providers>
				<html suppressHydrationWarning lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'}>
					<body className={`${poppins.variable} font-sans`}>
						<NextIntlClientProvider locale={locale} messages={messages}>
							<div id='root'>
								<div data-component-name='App' className='flex grow flex-col'>
									<AppWrapper>{children as ReactNode}</AppWrapper>
								</div>
							</div>
							<div id='portal-root' />
						</NextIntlClientProvider>
					</body>
				</html>
			</Providers>
		</SessionProvider>
	);
};

export default RootLayout;
